---
- hosts: localhost
  connection: local
  gather_facts: false
  ignore_errors: true  

  vars:
    file: /home/user/myfile.py
    url: https://github.com/user/example.git
    dest: /home/user/example
    username: user
    token: MyAccessTokenFromGithub
		version: master

  tasks:
	
	  - name: Ensure git repo is active and up to date
    	git:
      	repo: "{{ url }}"
      	dest: "{{ dest }}"
      	update: yes
      	version: "{{ version }}"
    	register: gitrepo
			
		- debug: var=gitrepo

# Alternative task if working with an empty repository
    - name: clone git repository
      shell: git clone {{ url }}

    - name: verify repo is present in directory
      stat: path={{ dest }}
      register: result

    - debug: var=result

    - name: Adding file to git repository
      shell: 
      args:
        chdir: "{{ dest }}"
        cmd: git add {{ file }}
      register: gitadd
      when:  result.stat.exists and result.stat.isdir

    - debug: var=gitadd

    - name: Committing file to git repository
      shell: 
      args:
        chdir: "{{ dest }}"
        cmd: git commit -m "initial commit" 
      register: mycommit
      when:  result.stat.exists and result.stat.isdir

    - debug: var=mycommit    

    - name: Committing file to git repository
      shell: 
      args:
        chdir: "{{ dest }}"
        cmd: git push origin HEAD:master 
      register: gitpush
      when:  result.stat.exists and result.stat.isdir
			
# Experimenting with expect module for automated credential entry
    # - name: Push changes to main branch of repository
    #   expect: 
    #     chdir: "{{ dest }}"
    #     command: git push origin HEAD:master
    #     responses:
    #       - "Username for 'https://github.com'": "{{ username }}"
    #       - "Password for 'https://{{ username }}@github.com'": "{{ token }}"
    #     timeout: 10
    #   register: gitpush
    #   when:  result.stat.exists and result.stat.isdir

    - debug: var=gitpush

